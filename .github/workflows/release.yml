name: release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v4
        with:
          go-version: stable
          cache-dependency-path: server/go.sum
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: cd frontend && npm ci && npm run build
      - run: cp -r frontend/dist server/pkg/public
      - uses: goreleaser/goreleaser-action@v4
        with:
          workdir: server
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Write SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.TARGET_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          echo "${{ vars.SSH_CONFIG }}" > ~/.ssh/config
      - name: Fix Permissions
        run: |
          chmod +x server/dist/your-turn-to-roll_linux_amd64_v1/your-turn-to-roll
      - name: Deploy to remote server
        run: |
          ssh -p ${{ secrets.TARGET_PORT }} ${{ secrets.TARGET_USER }}@${{ secrets.TARGET_HOST }} 'systemctl --user stop yttr'
          scp -P ${{ secrets.TARGET_PORT }} server/dist/your-turn-to-roll_linux_amd64_v1/your-turn-to-roll '${{ secrets.TARGET_USER }}@${{ secrets.TARGET_HOST }}:web'
          ssh -p ${{ secrets.TARGET_PORT }} ${{ secrets.TARGET_USER }}@${{ secrets.TARGET_HOST }} 'systemctl --user start yttr'
